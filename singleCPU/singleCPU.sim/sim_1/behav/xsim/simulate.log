Vivado Simulator 2017.4
Time resolution is 1 ps
                   0 IF/PC: addr = xxxxxxxx
                   0 IF/PC: next_addr = xxxxxxxx
                   0 IF/rom: read Rom xxxxxxxx -> data = xxxxxxxx
                   0 IF: pcindex = x
                   0 ID/CU: opcode = xx, func = xx
                   0 ID/CU: regWE = x
                   0 EXE/alu: a = xxxxxxxx, b = xxxxxxxx
                   0 EXE/alu: op = xxxx
                   0 EXE/alu: f = xxxxxxxx
                   0 MEM/IOManager: displaydata = xxxxxxxx
                   0 WB/reg: read Reg xx -> data1 = xxxxxxxx
                   0 WB/reg: read Reg xx -> data2 = xxxxxxxx
                  10 IF/PC: addr = 00000000
                  10 IF/rom: read Rom 00000000 -> data = 8c030020
                  10 WB/reg: read Reg 03 -> data2 = xxxxxxxx
                  10 WB/reg: read Reg 00 -> data1 = 00000000
                  10 ID/CU: opcode = 23, func = xx
                  10 ID/CU: regWE = 1
                  10 EXE/alu: op = 0001
                  10 IF: pcindex = 0
                  10 IF/PC: next_addr = 00000004
                  11 EXE/alu: a = 00000000, b = 00000020
                  11 EXE/alu: f = 00000020
                  13 WB/reg: write 0000000d to Reg 03
                  13 WB/reg: read Reg 03 -> data2 = 0000000d
                  30 IF/PC: addr = 00000004
                  30 IF/rom: read Rom 00000004 -> data = 20010001
                  30 IF/PC: next_addr = 00000008
                  30 WB/reg: read Reg 01 -> data2 = xxxxxxxx
                  30 ID/CU: opcode = 08, func = xx
                  31 MEM/IOManager/ram: read Ram 1 -> data = xxxxxxxx
                  31 EXE/alu: a = 00000000, b = 00000001
                  31 EXE/alu: f = 00000001
                  33 WB/reg: write 00000001 to Reg 01
                  33 WB/reg: read Reg 01 -> data2 = 00000001
                  50 IF/PC: addr = 00000008
                  50 IF/rom: read Rom 00000008 -> data = 20020001
                  50 IF/PC: next_addr = 0000000c
                  50 WB/reg: read Reg 02 -> data2 = xxxxxxxx
                  53 WB/reg: write 00000001 to Reg 02
                  53 WB/reg: read Reg 02 -> data2 = 00000001
                  70 IF/PC: addr = 0000000c
                  70 IF/rom: read Rom 0000000c -> data = 20050002
                  70 IF/PC: next_addr = 00000010
                  70 WB/reg: read Reg 05 -> data2 = xxxxxxxx
                  71 MEM/IOManager/ram: read Ram 2 -> data = xxxxxxxx
                  71 EXE/alu: a = 00000000, b = 00000002
                  71 EXE/alu: f = 00000002
                  73 WB/reg: write 00000002 to Reg 05
                  73 WB/reg: read Reg 05 -> data2 = 00000002
                  90 IF/PC: addr = 00000010
                  90 IF/rom: read Rom 00000010 -> data = 20a50001
                  90 IF/PC: next_addr = 00000014
                  90 WB/reg: read Reg 05 -> data1 = 00000002
                  91 MEM/IOManager/ram: read Ram 3 -> data = xxxxxxxx
                  91 EXE/alu: a = 00000002, b = 00000001
                  91 EXE/alu: f = 00000003
                  93 WB/reg: write 00000003 to Reg 05
                  93 WB/reg: read Reg 05 -> data1 = 00000003
                  93 WB/reg: read Reg 05 -> data2 = 00000003
                 110 IF/PC: addr = 00000014
                 110 IF/rom: read Rom 00000014 -> data = 00222020
                 110 IF/PC: next_addr = 00000018
                 110 ID/CU: opcode = 00, func = 20
                 110 WB/reg: read Reg 02 -> data2 = 00000001
                 110 WB/reg: read Reg 01 -> data1 = 00000001
                 111 MEM/IOManager/ram: read Ram 2 -> data = xxxxxxxx
                 111 EXE/alu: a = 00000001, b = 00000001
                 111 EXE/alu: f = 00000002
                 113 WB/reg: write 00000002 to Reg 04
                 130 IF/PC: addr = 00000018
                 130 IF/rom: read Rom 00000018 -> data = 20410000
                 130 IF/PC: next_addr = 0000001c
                 130 WB/reg: read Reg 01 -> data2 = 00000001
                 130 WB/reg: read Reg 02 -> data1 = 00000001
                 130 ID/CU: opcode = 08, func = 20
                 131 MEM/IOManager/ram: read Ram 1 -> data = xxxxxxxx
                 131 EXE/alu: a = 00000001, b = 00000000
                 131 EXE/alu: f = 00000001
                 133 WB/reg: write 00000001 to Reg 01
                 150 IF/PC: addr = 0000001c
                 150 IF/rom: read Rom 0000001c -> data = 20820000
                 150 IF/PC: next_addr = 00000020
                 150 WB/reg: read Reg 02 -> data2 = 00000001
                 150 WB/reg: read Reg 04 -> data1 = 00000002
                 151 MEM/IOManager/ram: read Ram 2 -> data = xxxxxxxx
                 151 EXE/alu: a = 00000002, b = 00000000
                 151 EXE/alu: f = 00000002
                 153 WB/reg: write 00000002 to Reg 02
                 153 WB/reg: read Reg 02 -> data2 = 00000002
                 170 IF/PC: addr = 00000020
                 170 IF/rom: read Rom 00000020 -> data = aca40000
                 170 IF/PC: next_addr = 00000024
                 170 WB/reg: read Reg 04 -> data2 = 00000002
                 170 WB/reg: read Reg 05 -> data1 = 00000003
                 170 ID/CU: opcode = 2b, func = 20
                 170 ID/CU: regWE = 0
                 171 MEM/IOManager/ram: read Ram 3 -> data = xxxxxxxx
                 171 EXE/alu: a = 00000003, b = 00000000
                 171 EXE/alu: f = 00000003
                 172 MEM/IOManager/ram: write 00000002 to Ram 3
                 172 MEM/IOManager/ram: read Ram 3 -> data = 00000002
                 190 IF/PC: addr = 00000024
                 190 IF/rom: read Rom 00000024 -> data = ac040010
                 190 IF/PC: next_addr = 00000028
                 190 WB/reg: read Reg 00 -> data1 = 00000000
                 191 EXE/alu: a = 00000000, b = 00000010
                 191 EXE/alu: f = 00000010
                 210 IF/PC: addr = 00000028
                 210 MEM/IOManager: displaydata = 00000002
                 210 IF/rom: read Rom 00000028 -> data = 1465fffa
                 210 IF/PC: next_addr = 00000010
                 210 WB/reg: read Reg 03 -> data1 = 0000000d
                 210 WB/reg: read Reg 05 -> data2 = 00000003
                 210 ID/CU: opcode = 05, func = 20
                 210 IF: pcindex = 1
                 210 EXE/alu: op = 0010
                 210 EXE/alu: f = fffffff0
                 211 MEM/IOManager/ram: read Ram a -> data = xxxxxxxx
                 211 EXE/alu: a = 0000000d, b = 00000003
                 211 EXE/alu: f = 0000000a
                 230 IF/PC: addr = 00000010
                 230 IF/rom: read Rom 00000010 -> data = 20a50001
                 230 IF/PC: next_addr = 00000014
                 230 WB/reg: read Reg 05 -> data1 = 00000003
                 230 ID/CU: opcode = 08, func = 20
                 230 ID/CU: regWE = 1
                 230 EXE/alu: op = 0001
                 230 IF: pcindex = 0
                 230 EXE/alu: f = 00000010
                 231 MEM/IOManager/ram: read Ram 4 -> data = xxxxxxxx
                 231 EXE/alu: a = 00000003, b = 00000001
                 231 EXE/alu: f = 00000004
                 233 WB/reg: write 00000004 to Reg 05
                 233 WB/reg: read Reg 05 -> data1 = 00000004
                 233 WB/reg: read Reg 05 -> data2 = 00000004
                 250 IF/PC: addr = 00000014
                 250 IF/rom: read Rom 00000014 -> data = 00222020
                 250 IF/PC: next_addr = 00000018
                 250 WB/reg: read Reg 02 -> data2 = 00000002
                 250 WB/reg: read Reg 01 -> data1 = 00000001
                 250 ID/CU: opcode = 00, func = 20
                 251 MEM/IOManager/ram: read Ram 3 -> data = 00000002
                 251 EXE/alu: a = 00000001, b = 00000002
                 251 EXE/alu: f = 00000003
                 253 WB/reg: write 00000003 to Reg 04
                 270 IF/PC: addr = 00000018
                 270 IF/rom: read Rom 00000018 -> data = 20410000
                 270 IF/PC: next_addr = 0000001c
                 270 WB/reg: read Reg 01 -> data2 = 00000001
                 270 WB/reg: read Reg 02 -> data1 = 00000002
                 270 ID/CU: opcode = 08, func = 20
                 271 MEM/IOManager/ram: read Ram 2 -> data = xxxxxxxx
                 271 EXE/alu: a = 00000002, b = 00000000
                 271 EXE/alu: f = 00000002
                 273 WB/reg: write 00000002 to Reg 01
                 273 WB/reg: read Reg 01 -> data2 = 00000002
                 290 IF/PC: addr = 0000001c
                 290 IF/rom: read Rom 0000001c -> data = 20820000
                 290 IF/PC: next_addr = 00000020
                 290 WB/reg: read Reg 02 -> data2 = 00000002
                 290 WB/reg: read Reg 04 -> data1 = 00000003
                 291 MEM/IOManager/ram: read Ram 3 -> data = 00000002
                 291 EXE/alu: a = 00000003, b = 00000000
                 291 EXE/alu: f = 00000003
                 293 WB/reg: write 00000003 to Reg 02
                 293 WB/reg: read Reg 02 -> data2 = 00000003
                 310 IF/PC: addr = 00000020
                 310 IF/rom: read Rom 00000020 -> data = aca40000
                 310 IF/PC: next_addr = 00000024
                 310 WB/reg: read Reg 04 -> data2 = 00000003
                 310 WB/reg: read Reg 05 -> data1 = 00000004
                 310 ID/CU: opcode = 2b, func = 20
                 310 ID/CU: regWE = 0
                 311 MEM/IOManager/ram: read Ram 4 -> data = xxxxxxxx
                 311 EXE/alu: a = 00000004, b = 00000000
                 311 EXE/alu: f = 00000004
                 312 MEM/IOManager/ram: write 00000003 to Ram 4
                 312 MEM/IOManager/ram: read Ram 4 -> data = 00000003
                 330 IF/PC: addr = 00000024
                 330 IF/rom: read Rom 00000024 -> data = ac040010
                 330 IF/PC: next_addr = 00000028
                 330 WB/reg: read Reg 00 -> data1 = 00000000
                 331 EXE/alu: a = 00000000, b = 00000010
                 331 EXE/alu: f = 00000010
                 350 IF/PC: addr = 00000028
                 350 MEM/IOManager: displaydata = 00000003
                 350 IF/rom: read Rom 00000028 -> data = 1465fffa
                 350 IF/PC: next_addr = 00000010
                 350 WB/reg: read Reg 03 -> data1 = 0000000d
                 350 WB/reg: read Reg 05 -> data2 = 00000004
                 350 ID/CU: opcode = 05, func = 20
                 350 IF: pcindex = 1
                 350 EXE/alu: op = 0010
                 350 EXE/alu: f = fffffff0
                 351 MEM/IOManager/ram: read Ram 9 -> data = xxxxxxxx
                 351 EXE/alu: a = 0000000d, b = 00000004
                 351 EXE/alu: f = 00000009
                 370 IF/PC: addr = 00000010
                 370 IF/rom: read Rom 00000010 -> data = 20a50001
                 370 IF/PC: next_addr = 00000014
                 370 WB/reg: read Reg 05 -> data1 = 00000004
                 370 ID/CU: opcode = 08, func = 20
                 370 ID/CU: regWE = 1
                 370 EXE/alu: op = 0001
                 370 IF: pcindex = 0
                 370 EXE/alu: f = 00000011
                 371 MEM/IOManager/ram: read Ram 5 -> data = xxxxxxxx
                 371 EXE/alu: a = 00000004, b = 00000001
                 371 EXE/alu: f = 00000005
                 373 WB/reg: write 00000005 to Reg 05
                 373 WB/reg: read Reg 05 -> data1 = 00000005
                 373 WB/reg: read Reg 05 -> data2 = 00000005
                 390 IF/PC: addr = 00000014
                 390 IF/rom: read Rom 00000014 -> data = 00222020
                 390 IF/PC: next_addr = 00000018
                 390 WB/reg: read Reg 02 -> data2 = 00000003
                 390 WB/reg: read Reg 01 -> data1 = 00000002
                 390 ID/CU: opcode = 00, func = 20
                 391 EXE/alu: a = 00000002, b = 00000003
                 393 WB/reg: write 00000005 to Reg 04
                 410 IF/PC: addr = 00000018
                 410 IF/rom: read Rom 00000018 -> data = 20410000
                 410 IF/PC: next_addr = 0000001c
                 410 WB/reg: read Reg 01 -> data2 = 00000002
                 410 WB/reg: read Reg 02 -> data1 = 00000003
                 410 ID/CU: opcode = 08, func = 20
                 411 MEM/IOManager/ram: read Ram 3 -> data = 00000002
                 411 EXE/alu: a = 00000003, b = 00000000
                 411 EXE/alu: f = 00000003
                 413 WB/reg: write 00000003 to Reg 01
                 413 WB/reg: read Reg 01 -> data2 = 00000003
                 430 IF/PC: addr = 0000001c
                 430 IF/rom: read Rom 0000001c -> data = 20820000
                 430 IF/PC: next_addr = 00000020
                 430 WB/reg: read Reg 02 -> data2 = 00000003
                 430 WB/reg: read Reg 04 -> data1 = 00000005
                 431 MEM/IOManager/ram: read Ram 5 -> data = xxxxxxxx
                 431 EXE/alu: a = 00000005, b = 00000000
                 431 EXE/alu: f = 00000005
                 433 WB/reg: write 00000005 to Reg 02
                 433 WB/reg: read Reg 02 -> data2 = 00000005
                 450 IF/PC: addr = 00000020
                 450 IF/rom: read Rom 00000020 -> data = aca40000
                 450 IF/PC: next_addr = 00000024
                 450 WB/reg: read Reg 04 -> data2 = 00000005
                 450 WB/reg: read Reg 05 -> data1 = 00000005
                 450 ID/CU: opcode = 2b, func = 20
                 450 ID/CU: regWE = 0
                 452 MEM/IOManager/ram: write 00000005 to Ram 5
                 452 MEM/IOManager/ram: read Ram 5 -> data = 00000005
                 470 IF/PC: addr = 00000024
                 470 IF/rom: read Rom 00000024 -> data = ac040010
                 470 IF/PC: next_addr = 00000028
                 470 WB/reg: read Reg 00 -> data1 = 00000000
                 471 EXE/alu: a = 00000000, b = 00000010
                 471 EXE/alu: f = 00000010
                 490 IF/PC: addr = 00000028
                 490 MEM/IOManager: displaydata = 00000005
                 490 IF/rom: read Rom 00000028 -> data = 1465fffa
                 490 IF/PC: next_addr = 00000010
                 490 WB/reg: read Reg 03 -> data1 = 0000000d
                 490 WB/reg: read Reg 05 -> data2 = 00000005
                 490 ID/CU: opcode = 05, func = 20
                 490 IF: pcindex = 1
                 490 EXE/alu: op = 0010
                 490 EXE/alu: f = fffffff0
                 491 MEM/IOManager/ram: read Ram 8 -> data = xxxxxxxx
                 491 EXE/alu: a = 0000000d, b = 00000005
                 491 EXE/alu: f = 00000008
                 510 IF/PC: addr = 00000010
                 510 IF/rom: read Rom 00000010 -> data = 20a50001
                 510 IF/PC: next_addr = 00000014
                 510 WB/reg: read Reg 05 -> data1 = 00000005
                 510 ID/CU: opcode = 08, func = 20
                 510 ID/CU: regWE = 1
                 510 EXE/alu: op = 0001
                 510 IF: pcindex = 0
                 510 EXE/alu: f = 00000012
                 511 MEM/IOManager/ram: read Ram 6 -> data = xxxxxxxx
                 511 EXE/alu: a = 00000005, b = 00000001
                 511 EXE/alu: f = 00000006
                 513 WB/reg: write 00000006 to Reg 05
                 513 WB/reg: read Reg 05 -> data1 = 00000006
                 513 WB/reg: read Reg 05 -> data2 = 00000006
                 530 IF/PC: addr = 00000014
                 530 IF/rom: read Rom 00000014 -> data = 00222020
                 530 IF/PC: next_addr = 00000018
                 530 WB/reg: read Reg 02 -> data2 = 00000005
                 530 WB/reg: read Reg 01 -> data1 = 00000003
                 530 ID/CU: opcode = 00, func = 20
                 531 MEM/IOManager/ram: read Ram 8 -> data = xxxxxxxx
                 531 EXE/alu: a = 00000003, b = 00000005
                 531 EXE/alu: f = 00000008
                 533 WB/reg: write 00000008 to Reg 04
                 550 IF/PC: addr = 00000018
                 550 IF/rom: read Rom 00000018 -> data = 20410000
                 550 IF/PC: next_addr = 0000001c
                 550 WB/reg: read Reg 01 -> data2 = 00000003
                 550 WB/reg: read Reg 02 -> data1 = 00000005
                 550 ID/CU: opcode = 08, func = 20
                 551 MEM/IOManager/ram: read Ram 5 -> data = 00000005
                 551 EXE/alu: a = 00000005, b = 00000000
                 551 EXE/alu: f = 00000005
                 553 WB/reg: write 00000005 to Reg 01
                 553 WB/reg: read Reg 01 -> data2 = 00000005
                 570 IF/PC: addr = 0000001c
                 570 IF/rom: read Rom 0000001c -> data = 20820000
                 570 IF/PC: next_addr = 00000020
                 570 WB/reg: read Reg 02 -> data2 = 00000005
                 570 WB/reg: read Reg 04 -> data1 = 00000008
                 571 MEM/IOManager/ram: read Ram 8 -> data = xxxxxxxx
                 571 EXE/alu: a = 00000008, b = 00000000
                 571 EXE/alu: f = 00000008
                 573 WB/reg: write 00000008 to Reg 02
                 573 WB/reg: read Reg 02 -> data2 = 00000008
                 590 IF/PC: addr = 00000020
                 590 IF/rom: read Rom 00000020 -> data = aca40000
                 590 IF/PC: next_addr = 00000024
                 590 WB/reg: read Reg 04 -> data2 = 00000008
                 590 WB/reg: read Reg 05 -> data1 = 00000006
                 590 ID/CU: opcode = 2b, func = 20
                 590 ID/CU: regWE = 0
                 591 MEM/IOManager/ram: read Ram 6 -> data = xxxxxxxx
                 591 EXE/alu: a = 00000006, b = 00000000
                 591 EXE/alu: f = 00000006
                 592 MEM/IOManager/ram: write 00000008 to Ram 6
                 592 MEM/IOManager/ram: read Ram 6 -> data = 00000008
                 610 IF/PC: addr = 00000024
                 610 IF/rom: read Rom 00000024 -> data = ac040010
                 610 IF/PC: next_addr = 00000028
                 610 WB/reg: read Reg 00 -> data1 = 00000000
                 611 EXE/alu: a = 00000000, b = 00000010
                 611 EXE/alu: f = 00000010
                 630 IF/PC: addr = 00000028
                 630 MEM/IOManager: displaydata = 00000008
                 630 IF/rom: read Rom 00000028 -> data = 1465fffa
                 630 IF/PC: next_addr = 00000010
                 630 WB/reg: read Reg 03 -> data1 = 0000000d
                 630 WB/reg: read Reg 05 -> data2 = 00000006
                 630 ID/CU: opcode = 05, func = 20
                 630 IF: pcindex = 1
                 630 EXE/alu: op = 0010
                 630 EXE/alu: f = fffffff0
                 631 MEM/IOManager/ram: read Ram 7 -> data = xxxxxxxx
                 631 EXE/alu: a = 0000000d, b = 00000006
                 631 EXE/alu: f = 00000007
                 650 IF/PC: addr = 00000010
                 650 IF/rom: read Rom 00000010 -> data = 20a50001
                 650 IF/PC: next_addr = 00000014
                 650 WB/reg: read Reg 05 -> data1 = 00000006
                 650 ID/CU: opcode = 08, func = 20
                 650 ID/CU: regWE = 1
                 650 EXE/alu: op = 0001
                 650 IF: pcindex = 0
                 650 EXE/alu: f = 00000013
                 651 MEM/IOManager/ram: read Ram 7 -> data = xxxxxxxx
                 651 EXE/alu: a = 00000006, b = 00000001
                 651 EXE/alu: f = 00000007
                 653 WB/reg: write 00000007 to Reg 05
                 653 WB/reg: read Reg 05 -> data1 = 00000007
                 653 WB/reg: read Reg 05 -> data2 = 00000007
                 670 IF/PC: addr = 00000014
                 670 IF/rom: read Rom 00000014 -> data = 00222020
                 670 IF/PC: next_addr = 00000018
                 670 WB/reg: read Reg 02 -> data2 = 00000008
                 670 WB/reg: read Reg 01 -> data1 = 00000005
                 670 ID/CU: opcode = 00, func = 20
                 671 MEM/IOManager/ram: read Ram d -> data = xxxxxxxx
                 671 EXE/alu: a = 00000005, b = 00000008
                 671 EXE/alu: f = 0000000d
                 673 WB/reg: write 0000000d to Reg 04
                 690 IF/PC: addr = 00000018
                 690 IF/rom: read Rom 00000018 -> data = 20410000
                 690 IF/PC: next_addr = 0000001c
                 690 WB/reg: read Reg 01 -> data2 = 00000005
                 690 WB/reg: read Reg 02 -> data1 = 00000008
                 690 ID/CU: opcode = 08, func = 20
                 691 MEM/IOManager/ram: read Ram 8 -> data = xxxxxxxx
                 691 EXE/alu: a = 00000008, b = 00000000
                 691 EXE/alu: f = 00000008
                 693 WB/reg: write 00000008 to Reg 01
                 693 WB/reg: read Reg 01 -> data2 = 00000008
                 710 IF/PC: addr = 0000001c
                 710 IF/rom: read Rom 0000001c -> data = 20820000
                 710 IF/PC: next_addr = 00000020
                 710 WB/reg: read Reg 02 -> data2 = 00000008
                 710 WB/reg: read Reg 04 -> data1 = 0000000d
                 711 MEM/IOManager/ram: read Ram d -> data = xxxxxxxx
                 711 EXE/alu: a = 0000000d, b = 00000000
                 711 EXE/alu: f = 0000000d
                 713 WB/reg: write 0000000d to Reg 02
                 713 WB/reg: read Reg 02 -> data2 = 0000000d
                 730 IF/PC: addr = 00000020
                 730 IF/rom: read Rom 00000020 -> data = aca40000
                 730 IF/PC: next_addr = 00000024
                 730 WB/reg: read Reg 04 -> data2 = 0000000d
                 730 WB/reg: read Reg 05 -> data1 = 00000007
                 730 ID/CU: opcode = 2b, func = 20
                 730 ID/CU: regWE = 0
                 731 MEM/IOManager/ram: read Ram 7 -> data = xxxxxxxx
                 731 EXE/alu: a = 00000007, b = 00000000
                 731 EXE/alu: f = 00000007
                 732 MEM/IOManager/ram: write 0000000d to Ram 7
                 732 MEM/IOManager/ram: read Ram 7 -> data = 0000000d
                 750 IF/PC: addr = 00000024
                 750 IF/rom: read Rom 00000024 -> data = ac040010
                 750 IF/PC: next_addr = 00000028
                 750 WB/reg: read Reg 00 -> data1 = 00000000
                 751 EXE/alu: a = 00000000, b = 00000010
                 751 EXE/alu: f = 00000010
                 770 IF/PC: addr = 00000028
                 770 MEM/IOManager: displaydata = 0000000d
                 770 IF/rom: read Rom 00000028 -> data = 1465fffa
                 770 IF/PC: next_addr = 00000010
                 770 WB/reg: read Reg 03 -> data1 = 0000000d
                 770 WB/reg: read Reg 05 -> data2 = 00000007
                 770 ID/CU: opcode = 05, func = 20
                 770 IF: pcindex = 1
                 770 EXE/alu: op = 0010
                 770 EXE/alu: f = fffffff0
                 771 MEM/IOManager/ram: read Ram 6 -> data = 00000008
                 771 EXE/alu: a = 0000000d, b = 00000007
                 771 EXE/alu: f = 00000006
                 790 IF/PC: addr = 00000010
                 790 IF/rom: read Rom 00000010 -> data = 20a50001
                 790 IF/PC: next_addr = 00000014
                 790 WB/reg: read Reg 05 -> data1 = 00000007
                 790 ID/CU: opcode = 08, func = 20
                 790 ID/CU: regWE = 1
                 790 EXE/alu: op = 0001
                 790 IF: pcindex = 0
                 790 EXE/alu: f = 00000014
                 791 MEM/IOManager/ram: read Ram 8 -> data = xxxxxxxx
                 791 EXE/alu: a = 00000007, b = 00000001
                 791 EXE/alu: f = 00000008
                 793 WB/reg: write 00000008 to Reg 05
                 793 WB/reg: read Reg 05 -> data1 = 00000008
                 793 WB/reg: read Reg 05 -> data2 = 00000008
                 810 IF/PC: addr = 00000014
                 810 IF/rom: read Rom 00000014 -> data = 00222020
                 810 IF/PC: next_addr = 00000018
                 810 WB/reg: read Reg 02 -> data2 = 0000000d
                 810 WB/reg: read Reg 01 -> data1 = 00000008
                 810 ID/CU: opcode = 00, func = 20
                 811 EXE/alu: a = 00000008, b = 0000000d
                 811 EXE/alu: f = 00000015
                 813 WB/reg: write 00000015 to Reg 04
                 830 IF/PC: addr = 00000018
                 830 IF/rom: read Rom 00000018 -> data = 20410000
                 830 IF/PC: next_addr = 0000001c
                 830 WB/reg: read Reg 01 -> data2 = 00000008
                 830 WB/reg: read Reg 02 -> data1 = 0000000d
                 830 ID/CU: opcode = 08, func = 20
                 831 MEM/IOManager/ram: read Ram d -> data = xxxxxxxx
                 831 EXE/alu: a = 0000000d, b = 00000000
                 831 EXE/alu: f = 0000000d
                 833 WB/reg: write 0000000d to Reg 01
                 833 WB/reg: read Reg 01 -> data2 = 0000000d
                 850 IF/PC: addr = 0000001c
                 850 IF/rom: read Rom 0000001c -> data = 20820000
                 850 IF/PC: next_addr = 00000020
                 850 WB/reg: read Reg 02 -> data2 = 0000000d
                 850 WB/reg: read Reg 04 -> data1 = 00000015
                 851 EXE/alu: a = 00000015, b = 00000000
                 851 EXE/alu: f = 00000015
                 853 WB/reg: write 00000015 to Reg 02
                 853 WB/reg: read Reg 02 -> data2 = 00000015
                 870 IF/PC: addr = 00000020
                 870 IF/rom: read Rom 00000020 -> data = aca40000
                 870 IF/PC: next_addr = 00000024
                 870 WB/reg: read Reg 04 -> data2 = 00000015
                 870 WB/reg: read Reg 05 -> data1 = 00000008
                 870 ID/CU: opcode = 2b, func = 20
                 870 ID/CU: regWE = 0
                 871 MEM/IOManager/ram: read Ram 8 -> data = xxxxxxxx
                 871 EXE/alu: a = 00000008, b = 00000000
                 871 EXE/alu: f = 00000008
                 872 MEM/IOManager/ram: write 00000015 to Ram 8
                 872 MEM/IOManager/ram: read Ram 8 -> data = 00000015
                 890 IF/PC: addr = 00000024
                 890 IF/rom: read Rom 00000024 -> data = ac040010
                 890 IF/PC: next_addr = 00000028
                 890 WB/reg: read Reg 00 -> data1 = 00000000
                 891 EXE/alu: a = 00000000, b = 00000010
                 891 EXE/alu: f = 00000010
                 910 IF/PC: addr = 00000028
                 910 MEM/IOManager: displaydata = 00000015
                 910 IF/rom: read Rom 00000028 -> data = 1465fffa
                 910 IF/PC: next_addr = 00000010
                 910 WB/reg: read Reg 03 -> data1 = 0000000d
                 910 WB/reg: read Reg 05 -> data2 = 00000008
                 910 ID/CU: opcode = 05, func = 20
                 910 IF: pcindex = 1
                 910 EXE/alu: op = 0010
                 910 EXE/alu: f = fffffff0
                 911 MEM/IOManager/ram: read Ram 5 -> data = 00000005
                 911 EXE/alu: a = 0000000d, b = 00000008
                 911 EXE/alu: f = 00000005
                 930 IF/PC: addr = 00000010
                 930 IF/rom: read Rom 00000010 -> data = 20a50001
                 930 IF/PC: next_addr = 00000014
                 930 WB/reg: read Reg 05 -> data1 = 00000008
                 930 ID/CU: opcode = 08, func = 20
                 930 ID/CU: regWE = 1
                 930 EXE/alu: op = 0001
                 930 IF: pcindex = 0
                 930 EXE/alu: f = 00000015
                 931 MEM/IOManager/ram: read Ram 9 -> data = xxxxxxxx
                 931 EXE/alu: a = 00000008, b = 00000001
                 931 EXE/alu: f = 00000009
                 933 WB/reg: write 00000009 to Reg 05
                 933 WB/reg: read Reg 05 -> data1 = 00000009
                 933 WB/reg: read Reg 05 -> data2 = 00000009
                 950 IF/PC: addr = 00000014
                 950 IF/rom: read Rom 00000014 -> data = 00222020
                 950 IF/PC: next_addr = 00000018
                 950 WB/reg: read Reg 02 -> data2 = 00000015
                 950 WB/reg: read Reg 01 -> data1 = 0000000d
                 950 ID/CU: opcode = 00, func = 20
                 951 EXE/alu: a = 0000000d, b = 00000015
                 951 EXE/alu: f = 00000022
                 953 WB/reg: write 00000022 to Reg 04
                 970 IF/PC: addr = 00000018
                 970 IF/rom: read Rom 00000018 -> data = 20410000
                 970 IF/PC: next_addr = 0000001c
                 970 WB/reg: read Reg 01 -> data2 = 0000000d
                 970 WB/reg: read Reg 02 -> data1 = 00000015
                 970 ID/CU: opcode = 08, func = 20
                 971 EXE/alu: a = 00000015, b = 00000000
                 971 EXE/alu: f = 00000015
                 973 WB/reg: write 00000015 to Reg 01
                 973 WB/reg: read Reg 01 -> data2 = 00000015
                 990 IF/PC: addr = 0000001c
                 990 IF/rom: read Rom 0000001c -> data = 20820000
                 990 IF/PC: next_addr = 00000020
                 990 WB/reg: read Reg 02 -> data2 = 00000015
                 990 WB/reg: read Reg 04 -> data1 = 00000022
                 991 EXE/alu: a = 00000022, b = 00000000
                 991 EXE/alu: f = 00000022
                 993 WB/reg: write 00000022 to Reg 02
                 993 WB/reg: read Reg 02 -> data2 = 00000022
